<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEBLAEsAAD/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYa
        HSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgo
        KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCABbAMgDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDgIbiG3mJkiXcfmP3cD8BVibUIZo9vlRRhucJtyw+nXtWZ9oYN
        lRDuHI54P1NRXFy0jfvEg6FTsZSB/nPWudo7UybzIp1beXK54HmqvbntUepFIICNOjMTA7izEMzcdsj9
        RVVvJJAjeX73O0rg/rStdQwSKfIfnoA3J49RSGRQtc3eBfcNGmV3Rkgrn14z+NJCjbylttCMcjadpIof
        VJJMtmJCRgZwSB/wKpJL92h8pp08rr8m1cfkKTuUrEYi7vOyEDHLcnr6irUcrxtEwni2ljkhMDHX1rNm
        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
        GOmaK+sovmgmz4yslGpKK2TP/9k=
</value>
  </data>
</root>